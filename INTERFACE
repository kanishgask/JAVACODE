package interfaces;


interface BankOperations {
 void deposit(double amount);
 void withdraw(double amount);
 double getBalance();
}


class Account implements BankOperations {
 private double balance;

 
 public Account(double initialBalance) {
     this.balance = initialBalance;
 }

 

 public void deposit(double amount) {
     if (amount > 0) {
         balance += amount;
         System.out.println("Deposited: " + amount);
     } else {
         System.out.println("Deposit amount must be positive.");
     }
 }


 public void withdraw(double amount) {
     if (amount > 0 && amount <= balance) {
         balance -= amount;
         System.out.println("Withdrew: " + amount);
     } else {
         System.out.println("Insufficient balance or invalid amount.");
     }
 }



 public double getBalance() {
     return balance;
 }

 
 public void displayAccountDetails() {
     System.out.println("Account balance: " + getBalance());
 }
}


class Transaction {
 private Account fromAccount;
 private Account toAccount;
 private double amount;


 public Transaction(Account fromAccount, Account toAccount, double amount) {
     this.fromAccount = fromAccount;
     this.toAccount = toAccount;
     this.amount = amount;
 }

 
 public void execute() {
     if (amount > 0 && fromAccount.getBalance() >= amount) {
         fromAccount.withdraw(amount);
         toAccount.deposit(amount);
         System.out.println("Transaction successful. Transferred: " + amount);
     } else {
         System.out.println("Transaction failed. Check the amount and account balances.");
     }
 }
}


public class interfaces {
 public static void main(String[] args) {
    
     Account account1 = new Account(1000.00);
     Account account2 = new Account(500.00);

    
     System.out.println("Initial Account Balances:");
     account1.displayAccountDetails();
     account2.displayAccountDetails();

   
     Transaction transaction = new Transaction(account1, account2, 200.00);
     transaction.execute();

    
     System.out.println("\nAccount Balances After Transaction:");
     account1.displayAccountDetails();
     account2.displayAccountDetails();
 }
}
